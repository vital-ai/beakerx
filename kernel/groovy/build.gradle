/*
 *  Copyright 2017 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'maven-publish'

ext.kernelIdName = 'groovy'
mainClassName = 'com.twosigma.beakerx.groovy.kernel.Groovy'

configurations {
  provided
  antlr
}

sourceSets {
  main {
    compileClasspath += configurations.provided
  }
  test {
    compileClasspath += configurations.provided
    runtimeClasspath += configurations.provided
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  provided project(':base')
  compile group: "vital-ai", name: "vitalsigns", version: "0.2.304"
//  compile group: "vital-ai", name: "vitalsigns-ast", version: "0.0.1"
  compile group: "vital-ai", name: "vital-domain", version: "0.2.304"
  compile group: "vital-ai", name: "vital-lucene", version: "0.2.304"
  compile group: "vital-ai", name: "vitalservice", version: "0.2.304"
  compile group: "org.codehaus.groovy", name: "groovy-all", version: "2.5.0-SNAPSHOT"
  compile group: 'org.antlr', name: 'antlr4-runtime', version: "$antlr4Version"
  antlr group: 'org.antlr', name: 'antlr4', version: "$antlr4Version"

  testCompile project(':base').sourceSets.test.output
}

task antlr4_groovy_lexer(type: JavaExec) {
  main = "org.antlr.v4.Tool"
  workingDir = "src/main/antlr4/"
  args = ["GroovyLexer.g4", "-o", "../java/com/twosigma/beakerx/groovy/autocomplete", "-listener", "-no-visitor", "-package", "com.twosigma.beakerx.groovy.autocomplete", "-encoding", "UTF-8"]
  classpath = configurations.antlr
}
task antlr4_groovy_parser(type: JavaExec) {
  main = "org.antlr.v4.Tool"
  workingDir = "src/main/antlr4/"
  args = ["GroovyParser.g4", "-o", "../java/com/twosigma/beakerx/groovy/autocomplete", "-listener", "-no-visitor", "-package", "com.twosigma.beakerx.groovy.autocomplete", "-encoding", "UTF-8"]
  classpath = configurations.antlr
}
compileJava.dependsOn antlr4_groovy_lexer
compileJava.dependsOn antlr4_groovy_parser

jar {
  manifest {
    attributes "Main-Class": "$mainClassName"
  }
}

jacocoTestReport {
  reports {
    html.enabled = true
    xml.enabled = false
    csv.enabled = false
  }
  afterEvaluate {
    classDirectories = files(classDirectories.files.collect {
      fileTree(dir: it,
              exclude: ['com/twosigma/beakerx/groovy/autocomplete/GroovyParser*',
                        'com/twosigma/beakerx/groovy/autocomplete/GroovyLexer*'
              ])
    })
  }
}

task realclean
realclean.dependsOn(clean)
// should also remove
// GroovyLexer.java GroovyLexer.tokens GroovyParser.java GroovyParser.tokens
// GroovyParserBaseListener.java GroovyParserListener.java

publishing {
  publications {
    maven(MavenPublication) {
      groupId 'com.twosigma'
      artifactId 'beaker-kernel-groovy'
      version '2.0-SNAPSHOT'
      from components.java
    }
  }
}

installDist.into new File(pathToStaticContent, kernelIdName)
distZip.dependsOn installDist
